<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-/mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cdp.health.mapper.HealthMapper">

	<!-- 관리자 메인 페이지 쿼리문 -->

	<!-- 어제 방문자 수 카운트 -->
	<select id="getYesterdayVisitors" resultType="int">
		SELECT COUNT(*)
		FROM VIST_LOGENTITY
		WHERE TRUNC(visit_time) = TRUNC(SYSDATE - 1)
	</select>

	<!-- 최근 7일 방문자 통계 -->
	<select id="getLast7DaysVisitors" resultType="map">
		SELECT TO_CHAR(VISIT_TIME, 'YYYY-MM-DD') AS visit_date,
		COUNT(*) AS cnt
		FROM VIST_LOGENTITY
		WHERE VISIT_TIME >= TRUNC(SYSDATE) - 6
		GROUP BY TO_CHAR(VISIT_TIME, 'YYYY-MM-DD')
		ORDER BY visit_date
	</select>

	<!-- 최근 7일 좋아요 통계 -->
	<select id="getLast7DaysLikes"
		resultType="com.cdp.health.dto.LikeStatsDTO">
		<![CDATA[
		  SELECT TO_CHAR(bv.like_date, 'YYYY-MM-DD') AS likeDate,
		         COUNT(*) AS cnt
		  FROM board_siteuser bv
		  WHERE bv.like_date >= TRUNC(SYSDATE) - 6
		  GROUP BY TO_CHAR(bv.like_date, 'YYYY-MM-DD')
		  ORDER BY likeDate
		]]>
	</select>


	<!-- 좋아요 TOP3 게시물 -->
	<select id="getTop3ByLikes"
		resultType="com.cdp.health.dto.BoardDTO">
		<![CDATA[
		  SELECT *
		  FROM (
		      SELECT b.num,
		             b.subject,
		             b.saveFileName,
		             COUNT(bv.voter_id) AS likeCount
		      FROM board b
		      LEFT JOIN board_siteuser bv
		        ON b.num = bv.board_num
		      GROUP BY b.num, b.subject, b.saveFileName
		      ORDER BY likeCount DESC
		  )
		  WHERE ROWNUM <= 3
		]]>
	</select>

	<!-- 운동 가이드 전체 목록 조회 -->
	<select id="getAllExercises"
		resultType="com.cdp.health.dto.ExerciseDTO">
		SELECT exid, expart, exname, targetmuscle, effect, method,
		youtubeurl
		FROM exercise
		ORDER BY expart, exid DESC
	</select>

	<!-- 1. 특정 부위 운동 목록 조회 -->
	<select id="getExercisesByPart" parameterType="string"
		resultType="com.cdp.health.dto.ExerciseDTO">
		SELECT exid, expart, exname, targetmuscle, effect,
		method, youtubeurl FROM exercise WHERE expart = #{part}
	</select>

	<!-- 2. 특정 ID 운동 상세 정보 조회 -->
	<select id="getExerciseById" parameterType="int"
		resultType="com.cdp.health.dto.ExerciseDTO">
		SELECT
		exid, expart, exname, targetmuscle, effect, method, youtubeurl
		FROM exercise
		WHERE exid = #{exId}
	</select>

	<!-- 3. 운동 정보 삽입 -->
	<insert id="insertExercise"
		parameterType="com.cdp.health.dto.ExerciseDTO">
		INSERT INTO exercise (exid, expart, exname, targetmuscle, effect, method,
		youtubeurl)
		VALUES (EXERCISE_SEQ.NEXTVAL, #{exPart}, #{exName}, #{targetMuscle},
		#{effect}, #{method}, #{youtubeUrl})
	</insert>

	<!-- 4. 운동 정보 수정 -->
	<update id="updateExercise"
		parameterType="com.cdp.health.dto.ExerciseDTO">
		UPDATE exercise
		SET
		expart = #{exPart},
		exname = #{exName},
		targetmuscle = #{targetMuscle},
		effect = #{effect},
		method = #{method},
		youtubeurl = #{youtubeUrl}
		WHERE exid = #{exId}
	</update>

	<!-- 5. 운동 정보 삭제 -->
	<delete id="deleteExercise" parameterType="int">
		DELETE FROM exercise
		WHERE exid = #{exId}
	</delete>

	<!-- WeightDTO를 위한 ResultMap 정의 -->
	<resultMap id="WeightResultMap"
		type="com.cdp.health.dto.WeightDTO">
		<id property="weightrecordid" column="WEIGHTRECORDID" />
		<result property="siteuserid" column="SITEUSERID" />
		<result property="currentweight" column="CURRENTWEIGHT" />
		<result property="recorddate" column="RECORDDATE" />
		<result property="weightmemo" column="WEIGHTMEMO" />
		<result property="userheight" column="USERHEIGHT" />
	</resultMap>
	<!-- ========== 체중 관리 관련 쿼리 ========== -->
	<!-- 체중 기록 삽입 - 오류 수정 -->
	<insert id="insertWeightRecord"
		parameterType="com.cdp.health.dto.WeightDTO">
		<selectKey keyProperty="weightrecordid" resultType="int"
			order="BEFORE"> SELECT WEIGHT_SEQ.NEXTVAL FROM DUAL </selectKey>
		INSERT INTO weight (WEIGHTRECORDID, SITEUSERID, CURRENTWEIGHT,
		RECORDDATE, WEIGHTMEMO, USERHEIGHT) VALUES (#{weightrecordid},
		#{siteuserid}, #{currentweight}, #{recorddate}, #{weightmemo},
		#{userheight})
	</insert>
	<!-- 사용자별 전체 체중 기록 조회 (최신순) -->
	<select id="getWeightRecordsBySiteuserid" parameterType="long"
		resultMap="WeightResultMap"> SELECT WEIGHTRECORDID, SITEUSERID, CURRENTWEIGHT,
		RECORDDATE, WEIGHTMEMO, USERHEIGHT FROM weight WHERE SITEUSERID =
		#{siteuserid} ORDER BY RECORDDATE DESC, WEIGHTRECORDID DESC </select>
	<!-- 사용자별 최근 체중 기록 조회 (차트용 - 최근 30개) -->
	<select id="getRecentWeightRecords" parameterType="long"
		resultMap="WeightResultMap"> 
		<![CDATA[
		SELECT * FROM ( 
		SELECT WEIGHTRECORDID, SITEUSERID, CURRENTWEIGHT, RECORDDATE, WEIGHTMEMO, USERHEIGHT 
		FROM weight WHERE SITEUSERID = #{siteuserid} ORDER BY RECORDDATE DESC, WEIGHTRECORDID DESC ) 
		WHERE ROWNUM <= 30 
		]]>
	</select>
	<!-- 체중 기록 수정 - 오류 수정 -->
	<update id="updateWeightRecord"
		parameterType="com.cdp.health.dto.WeightDTO"> UPDATE weight SET CURRENTWEIGHT = #{currentweight},
		RECORDDATE = #{recorddate}, WEIGHTMEMO = #{weightmemo}, USERHEIGHT =
		#{userheight} WHERE WEIGHTRECORDID = #{weightrecordid} </update>
	<!-- 체중 기록 삭제 -->
	<delete id="deleteWeightRecord" parameterType="int"> DELETE FROM
		weight WHERE WEIGHTRECORDID = #{weightrecordid} </delete>
	<!-- 체중 기록 단건 조회 - 메서드명 수정 -->
	<select id="getWeightRecordById" parameterType="int"
		resultMap="WeightResultMap"> SELECT WEIGHTRECORDID, SITEUSERID, CURRENTWEIGHT,
		RECORDDATE, WEIGHTMEMO, USERHEIGHT FROM weight WHERE WEIGHTRECORDID =
		#{weightrecordid} </select>
	<!-- 설정한 db 이름 : board -->
	<select id="maxNum" resultType="int"> select nvl(max(num),0) from
		board </select>
	<!-- 게시물 업로드 시 -->
	<insert id="insertData"
		parameterType="com.cdp.health.board.Board"> insert into
		board(num,userId,subject,content,saveFileName,originalFileName,author_id)
		values
		(#{num},#{userId},#{subject},#{content},#{saveFileName},#{originalFileName},#{author.id})
	</insert>
	<!-- 전체 데이터의 갯수 -->
	<select id="getDataCount" resultType="int">
		select nvl(count(*),0) from board
		<where>
			<if test="arg1 != null and arg1 != ''">
				<choose>
					<when test="arg0 == 'subject'"> subject like '%' || #{arg1} || '%' </when>
					<when test="arg0 == 'userId'"> userId like '%' || #{arg1} || '%' </when>
					<when test="arg0 == 'content'"> content like '%' || #{arg1} || '%' </when>
					<otherwise> subject like '%' || #{arg1} || '%' </otherwise>
				</choose>
			</if>
		</where>
	</select>
	<!-- 한 페이지에 표시할 데이터 -->
	<select id="getLists" resultType="com.cdp.health.dto.HealthDTO">
		select * from ( select rownum rnum, data.* from ( select
		num,userId,subject,saveFileName from board
		<where>
			<if test="arg3 != null and arg3 != ''">
				<choose>
					<when test="arg2 == 'subject'"> subject like '%' || #{arg3} || '%' </when>
					<when test="arg2 == 'userId'"> userId like '%' || #{arg3} || '%' </when>
					<when test="arg2 == 'content'"> content like '%' || #{arg3} || '%' </when>
					<otherwise> subject like '%' || #{arg3} || '%' </otherwise>
				</choose>
			</if>
		</where>
		order by num desc ) data )
		<![CDATA[ where rnum>=#{arg0} and rnum<=#{arg1} ]]>
	</select>
	<!-- num으로 조회한 데이터 -->
	<select id="getReadData" parameterType="int"
		resultType="com.cdp.health.dto.HealthDTO"> select
		num,userId,subject,content,saveFileName,originalFileName,author_id as
		authorId from board where num=#{num} </select>
	<update id="updateData"
		parameterType="com.cdp.health.dto.HealthDTO"> update board set
		userId=#{userId},subject=#{subject},content=#{content},
		saveFileName=#{saveFileName} where num=#{num} </update>
	<delete id="deleteData" parameterType="int"> delete from board where
		num=#{num} </delete>
	<delete id="deleteBoardLikes" parameterType="int"> delete from
		board_siteuser where board_num=#{num} </delete>

</mapper>